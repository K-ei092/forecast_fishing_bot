from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder


# —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏ "–ø–æ–¥–µ–ª–∏—Ç—å—Å—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º"
def create_geo_keyboard() -> ReplyKeyboardMarkup:
    builder = ReplyKeyboardBuilder()
    builder.row(
        KeyboardButton(text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º", request_location=True)
    )
    keyboard = builder.as_markup(resize_keyboard=True, one_time_keyboard=True)
    return keyboard


# —Ñ—É–Ω–∫—Ü–∏—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å —Ä–µ–≥–∏–æ–Ω–∞–º–∏
def create_state_keyboard() -> InlineKeyboardMarkup:

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∏–ª–¥–µ—Ä
    kb_builder = InlineKeyboardBuilder()

    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
    button_state_1 = InlineKeyboardButton(
        text='–ê—Å—Ç—Ä–∞—Ö–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        callback_data='^astrakhan^')

    button_state_2 = InlineKeyboardButton(
        text='–ë–∞—à–∫–æ—Ä—Ç–æ—Å—Ç–∞–Ω –†–µ—Å–ø—É–±–ª–∏–∫–∞',
        callback_data='^bashkortostan^')

    button_state_3 = InlineKeyboardButton(
        text='–ë–µ–ª–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        callback_data='^belgorod^')

    button_state_4 = InlineKeyboardButton(
        text='–í–ª–∞–¥–∏–º–∏—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        callback_data='^vladimir^')

    button_state_5 = InlineKeyboardButton(
        text='–í–æ–ª–≥–æ–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        callback_data='^volgograd^')

    button_state_6 = InlineKeyboardButton(
        text='–í–æ—Ä–æ–Ω–µ–∂—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        callback_data='^voronezh^')

    button_state_7 = InlineKeyboardButton(
        text='–ò–≤–∞–Ω–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        callback_data='^ivanovo^')

    button_state_8 = InlineKeyboardButton(
        text='–ò—Ä–∫—É—Ç—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        callback_data='^irkutsk^')

    button_state_9 = InlineKeyboardButton(
        text='–ö–∞–ª—É–∂—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        callback_data='^kaluga^')

    button_state_10 = InlineKeyboardButton(
        text='–ö–∞—Ä–µ–ª–∏—è –†–µ—Å–ø—É–±–ª–∏–∫–∞',
        callback_data='^karelia^')

    button_state_11 = InlineKeyboardButton(
        text='–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π',
        callback_data='^krasnodar^')

    button_state_12 = InlineKeyboardButton(
        text='–ö—É—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        callback_data='^kursk^')

    button_state_13 = InlineKeyboardButton(
        text='–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫–∏–π –∫—Ä–∞–π',
        callback_data='^krasnoyarsk^')

    button_state_14 = InlineKeyboardButton(
        text='–ö—É—Ä–≥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        callback_data='^kurgan^')

    button_state_15 = InlineKeyboardButton(
        text='–õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        callback_data='^leningrad^')

    button_state_16 = InlineKeyboardButton(
        text='–õ–∏–ø–µ—Ü–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        callback_data='^lipetsk^')

    button_state_17 = InlineKeyboardButton(
        text='–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        callback_data='^moscow^')

    button_state_18 = InlineKeyboardButton(
        text='–û–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        callback_data='^omsk^')

    button_state_19 = InlineKeyboardButton(
        text='–†–æ—Å—Ç–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        callback_data='^rostov-na-donu^')

    button_state_20 = InlineKeyboardButton(
        text='–°—Ç–∞–≤—Ä–æ–ø–æ–ª—å—Å–∫–∏–π –∫—Ä–∞–π',
        callback_data='^stavropol^')

    button_state_21 = InlineKeyboardButton(
        text='–¢–≤–µ—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        callback_data='^tver^')

    buttons: list[InlineKeyboardButton] =  [button_state_1, button_state_2, button_state_3,
                                            button_state_4, button_state_5, button_state_6,
                                            button_state_7, button_state_8, button_state_9,
                                            button_state_10, button_state_11, button_state_12,
                                            button_state_13, button_state_14, button_state_15,
                                            button_state_16, button_state_17, button_state_18,
                                            button_state_19, button_state_20, button_state_21]

    kb_builder.row(*buttons, width=2)
    return kb_builder.as_markup()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
def create_forecast_keyboard():
    button_forecast_fishing = InlineKeyboardButton(
        text='–ü—Ä–æ–≥–Ω–æ–∑ –∫–ª—ë–≤–∞ üé£',
        callback_data='fishing')
    button_forecast_weather = InlineKeyboardButton(
        text='–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã ‚õà',
        callback_data='weather')
    keyboard_continue = InlineKeyboardMarkup(inline_keyboard=[
        [button_forecast_fishing],
        [button_forecast_weather]
    ])
    return keyboard_continue


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä "–Ω–∞ –ª–µ—Ç—É"
def create_inline_kb(width: int,
                     *args: str,
                     last_btn: str | None = None,
                     **kwargs: str) -> InlineKeyboardMarkup:
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∏–ª–¥–µ—Ä
    kb_builder = InlineKeyboardBuilder()
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    buttons: list[InlineKeyboardButton] = []

    # –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–∫–∞–º–∏ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ args –∏ kwargs
    if args:
        for button in args:
            buttons.append(InlineKeyboardButton(
                text=LEXICON[button] if button in LEXICON else button,
                callback_data=button))
    if kwargs:
        for button, text in kwargs.items():
            buttons.append(InlineKeyboardButton(
                text=text,
                callback_data=button))

    # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –±–∏–ª–¥–µ—Ä –º–µ—Ç–æ–¥–æ–º row c –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º width
    kb_builder.row(*buttons, width=width)
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –±–∏–ª–¥–µ—Ä –ø–æ—Å–ª–µ–¥–Ω—é—é –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –ø–µ—Ä–µ–¥–∞–Ω–∞ –≤ —Ñ—É–Ω–∫—Ü–∏—é
    if last_btn:
        kb_builder.row(InlineKeyboardButton(
            text=last_btn,
            callback_data='$vse$'
        ))

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    return kb_builder.as_markup()

